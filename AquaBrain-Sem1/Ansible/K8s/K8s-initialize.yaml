- name: Initialize K8s Cluster
  hosts:
    - kubemaster-MASTER
  vars_files:
    - secrets.yaml
  vars:
    ansible_become_pass: "{{ vault_become_pass }}"
    ansible_ssh_common_args: '-o UserKnownHostsFile=./known_hosts'
  gather_facts: yes
  connection: ssh
  tasks:
    - name: Initialize Master
      shell: "kubeadm init --config=/etc/kubernetes/kubeadm.yaml --upload-certs >> cluster_initialized.log"
      become: yes
      args:
        chdir: /home/aquabrain
        creates: cluster_initialized.log
    - name: Ensure .kube directory exists
      file:
        path: "/home/aquabrain/.kube"
        state: directory
        owner: aquabrain
        group: aquabrain
        mode: '0755'
    - name: Copy administered kube config file
      become: yes
      copy:
        src: "/etc/kubernetes/admin.conf"
        dest: "/home/aquabrain/.kube/config"
        owner: aquabrain
        group: aquabrain
        mode: '0644'
        remote_src: true
    - name: Apply CNI (Flannel)
      become: yes
      shell: "kubectl apply -f /etc/kubernetes/kube-flannel.yaml"
      environment:
        KUBECONFIG: "/home/aquabrain/.kube/config"
    - name: Create join command for worker nodes
      become: yes
      shell: "kubeadm token create --print-join-command"
      register: worker_join_command
    - name: Extract certificate key for control-plane nodes
      become: yes
      shell: "kubeadm init phase upload-certs --upload-certs | grep -vw -e certificate -e Namespace"
      register: certificate_key
      run_once: true
    - name: Create temp file with token data
      copy:
        content: |
          worker_join_command: "{{ worker_join_command.stdout }}"
          certificate_key: "{{ certificate_key.stdout }}"
        dest: tmp/join.yaml
      delegate_to: localhost

- name: Other Masters Join K8s cluster
  hosts:
    - kubemaster-BACKUP
  vars_files:
    - secrets.yaml
  vars:
    ansible_become_pass: "{{ vault_become_pass }}"
    ansible_ssh_common_args: '-o UserKnownHostsFile=./known_hosts'
  gather_facts: yes
  connection: ssh
  tasks:
    - name: Get join command and cert key
      slurp:
        src: tmp/join.yaml
      register: join_data
      delegate_to: localhost
    - name: Join K8s cluster
      become: yes
      shell: "{{ (join_data['content'] | b64decode | from_yaml)['worker_join_command'] }} --control-plane --certificate-key {{ (join_data['content'] | b64decode | from_yaml)['certificate_key'] }}"

- name: Workers Join K8s cluster
  hosts:
    - kubeworker
  vars_files:
    - secrets.yaml
  vars:
    ansible_become_pass: "{{ vault_become_pass }}"
    ansible_ssh_common_args: '-o UserKnownHostsFile=./known_hosts'
  gather_facts: yes
  connection: ssh
  tasks:
    - name: Get join command and cert key
      slurp:
        src: tmp/join.yaml
      register: join_data
      delegate_to: localhost
    - name: Join K8s cluster
      become: yes
      shell: "{{ (join_data['content'] | b64decode | from_yaml)['worker_join_command'] }}"